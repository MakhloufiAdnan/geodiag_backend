services:
  # Service pour l'application API Node.js
  api:
    build: .
    container_name: geodiag_api
    # Utilise un fichier .env à la racine pour charger les variables d'environnement.
    env_file:
      - .env
    ports:
      # Mappe le port de l'API défini dans le .env (ex: 3000) au même port sur la machine hôte.
      - "${PORT}:${PORT}"
    volumes:
      - .:/app
      - /app/node_modules
    # S'assure que la base de données et Redis sont démarrés avant l'API.
    depends_on:
      - db
      - redis
    # La commande pour lancer l'application en mode développement avec hot-reloading.
    command: npm run dev

  # Service pour la base de données PostgreSQL
  db:
    image: postgres:16-alpine
    container_name: geodiag_db
    env_file:
      - .env
    ports:
      # Mappe le port de la BDD pour un accès externe (ex: avec un client SQL).
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Service pour le cache Redis
  redis:
    image: redis:latest
    container_name: geodiag_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

# Définit les volumes nommés pour la persistance des données.
volumes:
  postgres_data:
  redis_data:

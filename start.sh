# @file         start.sh
# @description  Script de d√©marrage pour le conteneur de l'application.
#               Ce script assure que la base de donn√©es est pr√™te avant de
#               lancer les migrations, puis d√©marre l'application Node.js.
#
# @requires     DATABASE_URL - Une variable d'environnement contenant l'URL de
#               connexion compl√®te √† la base de donn√©es PostgreSQL.

# Configure le shell pour qu'il quitte imm√©diatement si une commande √©choue.
set -e

# --- Attente de la Base de Donn√©es ---
# Boucle qui met en pause l'ex√©cution du script jusqu'√† ce que la base de
# donn√©es soit pr√™te √† accepter des connexions. C'est essentiel dans un
# environnement conteneuris√© o√π les services d√©marrent en parall√®le.
echo "Waiting for database to be ready..."
until pg_isready --dbname="$DATABASE_URL" --quiet; do
  echo "PostgreSQL is unavailable - sleeping for 2 seconds..."
  sleep 2
done
echo "‚úÖ Database is up and running!"

# --- Application des Migrations ---
# Une fois la base de donn√©es accessible, cette commande applique toutes les
# migrations de base de donn√©es qui n'ont pas encore √©t√© ex√©cut√©es,
# garantissant que le sch√©ma est √† jour avec le code.
echo "Running database migrations..."
npm run migrate up
echo "‚úÖ Migrations applied successfully."

# --- D√©marrage de l'Application ---
# 'exec' remplace le processus shell actuel par le processus de l'application.
# C'est une bonne pratique qui assure que les signaux du syst√®me (comme
# l'arr√™t du conteneur) sont correctement transmis √† l'application Node.js.
echo "üöÄ Starting application..."
exec npm start